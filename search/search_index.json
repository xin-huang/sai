{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SAI","text":"<p><code>sai</code> is a Python package for Statistics for Adaptive Introgression, which detects candidate regions of adaptive introgression from population genomic datasets. Currently, it supports the calculation of the number of uniquely shared sites (U statistic) and the quantile statistic (Q statistic) proposed by Racimo et al. (2017).</p>"},{"location":"#requirements","title":"Requirements","text":"<p><code>sai</code> works on Linux operating systems and tested with the following:</p> <pre><code>- matplotlib=3.9.1\n- natsort=8.4.0\n- numpy=1.26.4\n- pandas=2.2.1\n- pysam=0.23.0\n- python=3.9.19\n- pytest=8.1.1\n- scikit-allel=1.3.7\n- scipy=1.12.0\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<p>Users can first install mamba, and then install <code>sai</code> using the following commands:</p> <pre><code>git clone https://github.com/xin-huang/sai\ncd sai\nmamba env create -f build-env.yaml\nmamba activate sai\npip install .\n</code></pre>"},{"location":"#help","title":"Help","text":"<p>To get help information, users can use:</p> <pre><code>sai -h\n</code></pre> <p>This will display information for three commands:</p> Command Description score Run the score command based on specified parameters outlier Detect and output outlier rows based on quantile thresholds plot Generate a scatter plot of U vs Q statistics <p>If you need further help, such as such as reporting a bug or suggesting a feature, please open an issue.</p>"},{"location":"userguide/outlier/","title":"Extract Outliers","text":"<p><code>sai</code> provides the <code>outlier</code> command to identify candidate regions from the output of the <code>score</code> command.</p> <p>To see available options, we can run:</p> <pre><code>sai outlier -h\n</code></pre> <p>This will show information for each argument:</p> Argument Description -h, --help show this help message and exit --score Path to the input score file. --output Path to save the output file. --quantile Quantile threshold for outlier detection, between 0 and 1. Default: 0.99."},{"location":"userguide/outlier/#input-files","title":"Input files","text":"<p>The input file is the output generated by the <code>score</code> command.</p>"},{"location":"userguide/outlier/#output-files","title":"Output files","text":"<p>The output file has the same format as that of the <code>score</code> command.</p>"},{"location":"userguide/outlier/#examples","title":"Examples","text":"<p>To extract outliers from the output of the previous score example, we can use the following command:</p> <pre><code>sai outlier --score examples/results/1KG.nea_den.chr9.example.both.U.scores.tsv \\\n            --output examples/results/1KG.nea_den.chr9.example.both.U.outliers.tsv \\\n            --quantile 0.99\n</code></pre> <p>This identifies candidate introgressed regions from both Neanderthals and Denisovans by selecting windows with U statistic values above the 0.99 quantile in the <code>score</code> command output. The result can be found here.</p>"},{"location":"userguide/plot/","title":"Make Plots","text":"<p><code>sai</code> provides the <code>plot</code> command to generate a scatter plot of U statistic values versus Q statistic values for each genomic window.</p> <p>To view the available options, we can run:</p> <pre><code>sai plot -h\n</code></pre> <p>This will show information for each argument:</p> Argument Description -h, --help show this help message and exit --u-file Path to the U score/outlier file. --q-file Path to the Q score/outlier file. --output Path to save the output plot file. The format depends on the file extension (e.g., <code>.png</code>, <code>.pdf</code>). --xlabel Label for the X-axis. Default: Q Statistic. --ylabel Label for the Y-axis. Default: U Statistic. --title Title of the plot. Default: Scatter Plot of U vs Q. --figsize-x Width of the figure (in inches). Default: 6. --figsize-y Height of the figure (in inches). Default: 6. --dpi Resolution of the saved plot. Default: 300. --alpha Transparency level of scatter points. Default: 0.6. --marker-size Size of the scatter plot markers. See matplotlib.pyplot.scatter. Default: 20. --marker-color Color of the markers. See matplotlib.pyplot.scatter. Default: blue. --marker-style Shape of the markers. See matplotlib.pyplot.scatter. Default: o."},{"location":"userguide/plot/#input-files","title":"Input files","text":"<p>Two input files are required: one containing U statistic values and one containing Q statistic values. These files can be generated by either the score or outlier command.</p>"},{"location":"userguide/plot/#output-files","title":"Output files","text":"<p>The output file is a scatter plot showing U versus Q statistic values for each genomic window.</p>"},{"location":"userguide/plot/#examples","title":"Examples","text":"<p>To plot the U statistics versus Q95 statistic values for genomic windows for detecting introgressed variants from both Neanderthals and Denisovans, we can run the following:</p> <pre><code>sai plot --u-file examples/results/1KG.nea_den.chr9.example.both.U.scores.tsv \\\n         --q-file examples/results/1KG.nea_den.chr9.example.both.Q95.scores.tsv \\\n         --output examples/results/1KG.nea_den.chr9.example.both.U.vs.Q95.png\n</code></pre> <p>A file ending with <code>.intersection.tsv</code> (e.g., 1KG.nea_den.chr9.example.both.U.vs.Q95.intersection.tsv) is also generated to record the data points used in the plot.</p> <p>The resulting plot is shown below:</p> <p></p>"},{"location":"userguide/score/","title":"Calculate Statistics","text":"<p><code>sai</code> provides the <code>score</code> command to calculate the number of uniquely shared sites (U statistic) and the quantile statistic (Q statistic).</p> <p>To see available options, we can use the following command:</p> <pre><code>sai score -h\n</code></pre> <p>This will show information for each argument:</p> Argument Description -h, --help show this help message and exit --vcf Path to the VCF file containing variant data --chr-name Chromosome name to analyze from the VCF file. --ref Path to the file with reference population identifiers. --tgt Path to the file with target population identifiers. --src Path to the file with source population identifiers. --win-len Length of each genomic window in base pairs. Default: 50,000. --win-step Step size in base pairs between consecutive windows. Default: 10,000. --anc-alleles Path to the BED file with ancestral allele information. If ancestral allele information is not provided, allele frequencies will be calculated based on the major allele in the source population for each variant. Default: None. --w Frequency threshold for variants in the reference population; only variants with frequencies below this threshold are included in the analysis. Default: 0.01. --x Frequency threshold for variants in the target population; only variants with frequencies exceeding this threshold are included in the analysis. This argument is omitted when estimating the Q statistic. Default: 0.9. --y List of allele frequency conditions for the source populations. Each value must be in the form =X, &gt;X, =X, or &lt;=X (e.g., =0.7, &gt;0.8, &lt;0.1, &gt;=0.5, &lt;=0.2). The number of values must match the number of source populations in the file specified by <code>--src</code>; the order of the allele frequency conditions should also correspond to the order of source populations in that file. Default: =1. --output Output file path for saving results. --stat Type of statistic to compute: U or QXX, where 'XX' represents the quantile in percentage (e.g., <code>Q90</code>, <code>Q95</code>)."},{"location":"userguide/score/#input-files","title":"Input files","text":"<p><code>sai</code> requires a biallelic VCF file containing all populations, including the reference population (assumed to have no introgression), the target population (assumed to have received introgressed material), and the source population (assumed to have provided the introgressed material). It also assumes that all variants observed in these populations are already included in the input VCF file. The program does not fill in missing genotypes (e.g., treating unobserved genotypes as homozygous reference, as done in MaLAdapt). An example VCF file can be found here.</p> <p>Three tab-delimited files are required to specify the population information for individuals in the reference, target, and source populations. An example file is shown below and can also be found here.</p> <pre><code>NEA AltaiNeandertal\nDEN Denisova\n</code></pre> <p>This file specifies the individuals in the source populations. In this example, there are two source populations, NEA and DEN (first column), and the second column lists the corresponding sample names matching those in the VCF header.</p>"},{"location":"userguide/score/#output-files","title":"Output files","text":"<p>An example output of the U statistic calculation is shown below.</p> Chrom Start End Ref Tgt Src N(Variants) U Candidate 9 16400001 16440000 AFR+EAS EUR NEA,DEN 1082 0 NA 9 16440001 16480000 AFR+EAS EUR NEA,DEN 983 0 NA 9 16480001 16520000 AFR+EAS EUR NEA,DEN 985 0 NA 9 16520001 16560000 AFR+EAS EUR NEA,DEN 966 0 NA 9 16560001 16600000 AFR+EAS EUR NEA,DEN 1029 0 NA 9 16600001 16640000 AFR+EAS EUR NEA,DEN 1063 0 NA 9 16640001 16680000 AFR+EAS EUR NEA,DEN 1152 0 NA 9 16680001 16720000 AFR+EAS EUR NEA,DEN 999 1 9:16715657 9 16720001 16760000 AFR+EAS EUR NEA,DEN 1007 2 9:16758710,9:16759357 9 16760001 16800000 AFR+EAS EUR NEA,DEN 1060 1 9:16770229 9 16800001 16840000 AFR+EAS EUR NEA,DEN 960 1 9:16800789 9 16840001 16880000 AFR+EAS EUR NEA,DEN 923 0 NA 9 16880001 16920000 AFR+EAS EUR NEA,DEN 512 0 NA <p>Each row in the output file corresponds to a genomic window, summarizing the result for that region. The columns are as follows:</p> Column Description Chrom Chromosome number where the window is located. Start Start position (1-based, inclusive) of the window. End End position (inclusive) of the window. Ref Reference population. Tgt Target population. Src Source population. N(Variants) Number of variants found in this genomic window. Sites with missing genotypes in any population are excluded. If ancestral allele information is provided, variants whose ancestral allele does not match either the reference nor alternative allele in the VCF file are also excluded. U or QXX Number of uniquely shared sites or the XXth quantile in this window. Candidate Variant(s) (<code>chrom:pos</code>) that meet the specified condition. For the Q statistic, this refers to variant(s) whose allele frequency in the target population is greater than or equal to the XXth quantile within this window."},{"location":"userguide/score/#examples","title":"Examples","text":"<p>The following example estimates the U statistic using biallelic single nucleotide polymorphisms (SNPs) in the region <code>chr9:16400000-16900000</code> from the 1000 Genomes Project. The Neanderthal genome was obtained from here, and the Denisovan genome from here. The reference population includes all African populations (ESN, GWD, MSL, YRI), excluding the admixed populations (ACB and ASW), as well as all East Asian populations (CHB, CHS, DAI, KHV, JPT). The target population consists of all European populations (CEU, FIN, GBR, IBS, TSI). The source populations comprise one Neanderthal individual (AltaiNeandertal) and one Denisovan individual (Denisova).</p> <p>To detect introgressed variants from both Neanderthals and Denisovans, we can use the following command:</p> <pre><code>sai score --vcf examples/data/1KG.nea_den.chr9.example.vcf.gz \\\n          --ref examples/data/1KG.ref.samples.txt \\\n          --tgt examples/data/1KG.tgt.samples.txt \\\n          --src examples/data/1KG.nea_den.samples.txt \\\n          --anc-alleles examples/data/hg19.chr9.example.anc.alleles.bed \\\n          --chr-name 9 --stat U --w 0.01 --x 0.5 --y =1 =1 \\\n          --win-len 40000 --win-step 40000 \\\n          --output examples/results/1KG.nea_den.chr9.example.both.U.scores.tsv\n</code></pre> <p>We provide a BED file to specify the ancestral allele for each variant, based on alignments from Ensembl. In this example, the <code>--w</code>, <code>--x</code>, and <code>--y</code> arguments define the filtering conditions: the allele frequency of a variant must be less than 0.01 in the reference population, greater than 0.5 in the target population, and fixed (<code>=1</code>) in both Neanderthal and Denisovan genomes. The output is shown above and can be found here.</p> <p>To estimate the Q95 statistic for the same data, simply change <code>--stat U</code> to <code>--stat Q95</code>:</p> <pre><code>sai score --vcf examples/data/1KG.nea_den.chr9.example.vcf.gz \\\n          --ref examples/data/1KG.ref.samples.txt \\\n          --tgt examples/data/1KG.tgt.samples.txt \\\n          --src examples/data/1KG.nea_den.samples.txt \\\n          --anc-alleles examples/data/hg19.chr9.example.anc.alleles.bed \\\n          --chr-name 9 --stat Q95 --w 0.01 --y =1 =1 \\\n          --win-len 40000 --win-step 40000 \\\n          --output examples/results/1KG.nea_den.chr9.example.both.Q95.scores.tsv\n</code></pre> <p>The <code>--x</code> argument is not needed when calculating the Q statistic. If provided, it will be ignored. The output can be found here.</p> <p>To detect introgressed variants from Neanderthal introgression only, we can use:</p> <pre><code>sai score --vcf examples/data/1KG.nea_den.chr9.example.vcf.gz \\\n          --ref examples/data/1KG.ref.samples.txt \\\n          --tgt examples/data/1KG.tgt.samples.txt \\\n          --src examples/data/1KG.nea_den.samples.txt \\\n          --anc-alleles examples/data/hg19.chr9.example.anc.alleles.bed \\\n          --chr-name 9 --stat U --w 0.01 --x 0.5 --y =1 =0 \\\n          --win-len 40000 --win-step 40000 \\\n          --output examples/results/1KG.nea_den.chr9.example.nea.specific.U.scores.tsv\n</code></pre> <p>Here, we set <code>--y =1 =0</code> to require that the variant be fixed in the Neanderthal individual and absent in the Denisovan. This ensures that only Neanderthal-specific variants are considered as potential candidates for introgression. The output can be found here.</p> <p>To detect introgressed variants from Denisovan introgression only, we can use:</p> <pre><code>sai score --vcf examples/data/1KG.nea_den.chr9.example.vcf.gz \\\n          --ref examples/data/1KG.ref.samples.txt \\\n          --tgt examples/data/1KG.tgt.samples.txt \\\n          --src examples/data/1KG.nea_den.samples.txt \\\n          --anc-alleles examples/data/hg19.chr9.example.anc.alleles.bed \\\n          --chr-name 9 --stat U --w 0.01 --x 0.5 --y =0 =1 \\\n          --win-len 40000 --win-step 40000 \\\n          --output examples/results/1KG.nea_den.chr9.example.den.specific.U.scores.tsv\n</code></pre> <p>In this case, <code>--y =0 =1</code> requires that the variant be fixed in the Denisovan individual and absent in the Neanderthal, thereby identifying variants potentially introgressed from Denisovans only. The output can be found here.</p> <p>Any number of source populations is supported, including one, two, or more. However, note that the order of values provided to <code>--y</code> must match the order of source populations as specified in the file given by <code>--src</code>. For example, in <code>examples/data/1KG.nea_den.samples.txt</code>, the first source population is Neanderthal and the second is Denisovan. Therefore, <code>--y =1 =0</code> specifies that the variant must be fixed in Neanderthals and absent in Denisovans, while <code>--y =0 =1</code> specifies the reverse.</p> <p>Providing <code>--y</code> values in the wrong order (e.g., reversing the values without changing the order of the populations in <code>--src</code>) will result in incorrect interpretation of source-specific introgression signals.</p>"}]}